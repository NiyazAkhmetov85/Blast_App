import streamlit as st
from utils.session_state_manager import SessionStateManager
from utils.logs_manager import LogsManager
from modules.reference_parameters import ReferenceParameters
from modules.reference_calculations import ReferenceCalculations

class RefValues:
    def __init__(self, session_manager: SessionStateManager, logs_manager: LogsManager):
        self.session_manager = session_manager
        self.logs_manager = logs_manager
        self.reference_parameters = ReferenceParameters(session_manager, logs_manager)
        self.reference_calculations = ReferenceCalculations(session_manager, logs_manager)


    def show_reference_values(self):
        """
        –≠–∫—Ä–∞–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —ç—Ç–∞–ª–æ–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –ë–í–†.
        """
        st.header("üìå –≠—Ç–∞–ª–æ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ë–í–†")

        # ‚úÖ –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–º—è —Ç–µ–∫—É—â–µ–≥–æ –±–ª–æ–∫–∞
        block_name = st.session_state.get("block_name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –±–ª–æ–∫")
        if not block_name or block_name == "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –±–ª–æ–∫":
            st.warning("–ë–ª–æ–∫ –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –±–ª–æ–∫ –Ω–∞ –≤–∫–ª–∞–¥–∫–µ '–ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –±–ª–æ–∫–∞'.")
        else:
            st.info(f"–ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–ª–æ–∫: **{block_name}**")

        # ‚úÖ –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —ç—Ç–∞–ª–æ–Ω–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
        self.reference_parameters.render_refparameters_section()

        # ‚úÖ –í—ã–±–æ—Ä —Ç–∏–ø–∞ —à–∫–∞–ª—ã –∏ —à–∞–≥–∞
        self.reference_calculations.render_scale_type_selection()

        # ‚úÖ –ö–Ω–æ–ø–∫–∞ —É—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        if st.button("‚úÖ –£—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã"):
            self.logs_manager.add_log("reference_values", "–≠—Ç–∞–ª–æ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —É—Ç–≤–µ—Ä–∂–¥–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.", "—É—Å–ø–µ—Ö")
            st.success("‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —É—Ç–≤–µ—Ä–∂–¥–µ–Ω—ã!")

        # # ‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —à–∫–∞–ª—ã
        # if st.button("üîÑ –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —à–∫–∞–ª—É"):
        #     self.reference_calculations.generate_scale()

        # ‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —à–∫–∞–ª—ã
        if st.button("üîÑ –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —à–∫–∞–ª—É"):
            self.reference_calculations.generate_scale()
        
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ —à–∫–∞–ª–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞
            x_values = st.session_state.get("x_values", None)
            
            if x_values is not None and isinstance(x_values, (list, np.ndarray)) and len(x_values) > 0:
                df_x_values = pd.DataFrame(x_values, columns=["–†–∞–∑–º–µ—Ä —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞ (x), –º–º"])
                st.subheader("üîç –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∫–∞–ª–∞ x_values")
                st.dataframe(df_x_values)
            else:
                st.warning("‚ö† –®–∫–∞–ª–∞ x_values –Ω–µ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞ –∏–ª–∏ –ø—É—Å—Ç–∞—è.")


        # ‚úÖ –†–∞—Å—á–µ—Ç —ç—Ç–∞–ª–æ–Ω–Ω—ã—Ö P(x)
        if st.button("üìà –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —ç—Ç–∞–ª–æ–Ω–Ω—ã–µ P(x)"):
            self.reference_calculations.calculate_p_x()

        # ‚úÖ –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–∞–±–ª–∏—Ü—ã PSD –∏ –µ—ë —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        if "P_x_data" in st.session_state and st.session_state["P_x_data"] is not None:
            st.subheader("üìä –ò—Ç–æ–≥–æ–≤—ã–µ —ç—Ç–∞–ª–æ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è P(x)")
            st.dataframe(st.session_state["P_x_data"])

            if st.button("‚úÖ –£—Ç–≤–µ—Ä–¥–∏—Ç—å —à–∫–∞–ª—É –∏ P(x)"):
                self.reference_calculations.update_psd_table()
                st.success("‚úÖ –®–∫–∞–ª–∞ –∏ —ç—Ç–∞–ª–æ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —É—Ç–≤–µ—Ä–∂–¥–µ–Ω—ã!")
                self.logs_manager.add_log("reference_values", "–®–∫–∞–ª–∞ –∏ —ç—Ç–∞–ª–æ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —É—Ç–≤–µ—Ä–∂–¥–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.", "—É—Å–ø–µ—Ö")
