import streamlit as st
from modules.fragmentation_calculator import FragmentationCalculator
from modules.psd_calculator import PSDCalculator
from modules.results_display import ResultsDisplay
from utils.session_state_manager import SessionStateManager
from utils.logs_manager import LogsManager

class ResultsSummary:
    """
    –≠–∫—Ä–∞–Ω –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏—Ç–æ–≥–æ–≤—ã—Ö —Ä–∞—Å—á—ë—Ç–æ–≤, PSD-—Ç–∞–±–ª–∏—Ü—ã –∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.
    """
    def __init__(self, session_manager: SessionStateManager, logs_manager: LogsManager):
        self.session_manager = session_manager
        self.logs_manager = logs_manager
        self.calculator = FragmentationCalculator(session_manager)
        self.psd_calculator = PSDCalculator(session_manager)
        self.results_display = ResultsDisplay()

    def show_results_summary(self):
        """
        –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏—Ç–æ–≥–æ–≤—ã—Ö —Ä–∞—Å—á—ë—Ç–æ–≤ –∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏.
        """
        st.header("üìä –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–∞—Å—á—ë—Ç—ã –∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è")

        block_name = self.session_manager.get_state("current_block", "–ù–µ –∑–∞–¥–∞–Ω")
        st.info(f"üîπ –¢–µ–∫—É—â–∏–π –±–ª–æ–∫: **{block_name}**")

        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ä–∞—Å—á—ë—Ç–æ–≤
        if st.button("‚ñ∂ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞—Å—á—ë—Ç—ã"):
            with st.spinner("‚è≥ –í—ã–ø–æ–ª–Ω—è—é—Ç—Å—è —Ä–∞—Å—á—ë—Ç—ã..."):
                self.calculator.run_calculations()  # –†–∞—Å—á—ë—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ë–í–†
                self.psd_calculator.run_calculations()  # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ PSD-—Ç–∞–±–ª–∏—Ü—ã
                self.logs_manager.add_log("results_summary", "‚úÖ –í—Å–µ —Ä–∞—Å—á—ë—Ç—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã", "—É—Å–ø–µ—Ö")
            st.success("‚úÖ –í—Å–µ —Ä–∞—Å—á—ë—Ç—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!")

        # –ë–ª–æ–∫ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
        st.subheader("üìä –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")

        col1, col2, col3 = st.columns(3)

        with col1:
            if st.button("üìä –ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É PSD"):
                self.results_display.display_psd_table()

        with col2:
            if st.button("üìà –ü–æ–∫–∞–∑–∞—Ç—å –∫—É–º—É–ª—è—Ç–∏–≤–Ω—É—é –∫—Ä–∏–≤—É—é"):
                self.results_display.display_cumulative_curve()

        with col3:
            if st.button("üìã –ü–æ–∫–∞–∑–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –±–ª–æ–∫–∞"):
                self.results_display.display_summary_table()

        # –ë–ª–æ–∫ –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö
        st.subheader("üóë –û—á–∏—Å—Ç–∫–∞ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏")

        col4, col5 = st.columns(2)

        with col4:
            if st.button("üóë –û—á–∏—Å—Ç–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É"):
                self.session_manager.set_state("psd_table", None)
                st.warning("‚ö† –¢–∞–±–ª–∏—Ü–∞ PSD –æ—á–∏—â–µ–Ω–∞.")

        with col5:
            if st.button("üóë –û—á–∏—Å—Ç–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫"):
                self.session_manager.set_state("cumulative_curve", None)
                st.warning("‚ö† –ì—Ä–∞—Ñ–∏–∫ –∫—É–º—É–ª—è—Ç–∏–≤–Ω–æ–π –∫—Ä–∏–≤–æ–π –æ—á–∏—â–µ–Ω.")
