import streamlit as st

from modules.data_initializer import DataInitializer
from utils.session_state_manager import SessionStateManager
from utils.logs_manager import LogsManager

from ui.data_input import DataInput
from ui.reference_values import ReferenceParameters
from ui.results_summary import ReferenceCalculations

# ‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
session_manager = SessionStateManager()
logs_manager = LogsManager()
data_initializer = DataInitializer(session_manager, logs_manager)

# ‚úÖ –ü–µ—Ä–≤–∏—á–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ (—Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ)
if "parameters_loaded" not in st.session_state:
    data_initializer.load_default_parameters()
    st.session_state["parameters_loaded"] = True

def reload_parameters():
    """
    –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å –æ—á–∏—Å—Ç–∫–æ–π –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è —Å–æ–æ–±—â–µ–Ω–∏–π.
    """
    # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    if "status_messages" not in st.session_state:
        st.session_state["status_messages"] = []

    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    data_initializer.reload_parameters()

    # # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ, –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ –±—ã–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ —Ä–∞–Ω–µ–µ
    # message = "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω—ã!"
    # if message not in st.session_state["status_messages"]:
    #     st.session_state["status_messages"].append(message)

def show_sidebar():
    """
    –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏.
    """
    st.sidebar.button("–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã", on_click=reload_parameters)

    # # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
    # message_container = st.sidebar.empty()
    # with message_container:
    #     for msg in st.session_state.get("status_messages", []):
    #         st.sidebar.success(msg)

def navigation():
    """
    –§—É–Ω–∫—Ü–∏—è, —É–ø—Ä–∞–≤–ª—è—é—â–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
    """
    # ‚úÖ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
    show_sidebar()

    # ‚úÖ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫ –∏ –∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    data_input = DataInput(session_manager, logs_manager)

    TAB_OPTIONS = {
        "üì• –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –±–ª–æ–∫–∞": data_input.show_import_block,
        "üìã –í–≤–æ–¥ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤": data_input.show_input_form,
        "üìä –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –±–ª–æ–∫–∞": data_input.show_visualization,
        "üìú –ò—Ç–æ–≥–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": data_input.show_summary_screen,
        "üìå –≠—Ç–∞–ª–æ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è": RefValues.show_reference_values,
        "üìà –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–∞—Å—á–µ—Ç—ã": show_results_summary
    }

    # ‚úÖ –†–∞–∑–º–µ—â–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
    selected_tab = st.sidebar.radio("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª", list(TAB_OPTIONS.keys()))

    # ‚úÖ –ó–∞–ø—É—Å–∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ —ç–∫—Ä–∞–Ω–∞
    TAB_OPTIONS[selected_tab]()
